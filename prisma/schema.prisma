generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BookCategory {
  COMPUTATION
  EDUCATION
  FANTASY
  SCIENTIFIC_FICTION
  HORROR
  HQ
  SUSPENSE
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Rating        Rating[]
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_tokens")
}

model Book {
  id          Int            @id @default(autoincrement())
  name        String
  summary     String
  cover_image String
  author      String
  category    BookCategory[]
  total_pages Int
  Rating      Rating[]

  @@map("books")
}

model Rating {
  user_id    String
  book_id    Int
  rating     Int
  comment    String
  created_at DateTime @default(now())

  // Relacionamentos
  user User @relation(fields: [user_id], references: [id])
  book Book @relation(fields: [book_id], references: [id])

  @@id([user_id, book_id])
  @@map("ratings")
}
